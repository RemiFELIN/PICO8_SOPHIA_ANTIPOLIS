pico-8 cartridge // http://www.pico-8.com
version 16
__lua__

-- fonction pour reconnaitre quand une touche est enfoncé, released ...
keys={btns={},ct={}}

function keys:update()
 for i=0,13 do
  if band(btn(),shl(1,i))==shl(1,i) then
   if keys:held(i) then
    keys.btns[i]=2
    keys.ct[i]=(keys.ct[i]+1) % 30
   else
    keys.btns[i]=3
   end
  else
   if keys:held(i) then 
    keys.btns[i]=4
   else
    keys.btns[i]=0
   	keys.ct[i]=0
   end
  end
 end
end

function keys:held(b) return band(keys.btns[b],2) == 2 end
function keys:down(b) return band(keys.btns[b],1) == 1 end
function keys:up(b) return band(keys.btns[b],4) == 4 end
function keys:pulse(b,r) return (keys:held(b) and keys.ct[b]%r==0) end

--snipet pour les dialogues
-- call this before you start using dtb.
-- optional parameter is the number of lines that are displayed. default is 3.
function dtb_init(numlines)
	dtb_queu={}
	dtb_queuf={}
	dtb_numlines=3
	if numlines then
		dtb_numlines=numlines
	end
	_dtb_clean()
end

-- this will add a piece of text to the queu. the queu is processed automatically.
function dtb_disp(txt,callback)
	local lines={}
	local currline=""
	local curword=""
	local curchar=""
	local upt=function()
		if #curword+#currline>29 then
			add(lines,currline)
			currline=""
		end
		currline=currline..curword
		curword=""
	end
	for i=1,#txt do
		curchar=sub(txt,i,i)
		curword=curword..curchar
		if curchar==" " then
			upt()
		elseif #curword>28 then
			curword=curword.."-"
			upt()
		end
	end
	upt()
	if currline~="" then
		add(lines,currline)
	end
	add(dtb_queu,lines)
	if callback==nil then
		callback=0
	end
	add(dtb_queuf,callback)
end

-- functions with an underscore prefix are ment for internal use, don't worry about them.
function _dtb_clean()
	dtb_dislines={}
	for i=1,dtb_numlines do
		add(dtb_dislines,"")
	end
	dtb_curline=0
	dtb_ltime=0
end

function _dtb_nextline()
	dtb_curline+=1
	for i=1,#dtb_dislines-1 do
		dtb_dislines[i]=dtb_dislines[i+1]
	end
	dtb_dislines[#dtb_dislines]=""
	--sfx(2)
end

function _dtb_nexttext()
	if dtb_queuf[1]~=0 then -- ~= ===> not egal
		dtb_queuf[1]()
	end
	del(dtb_queuf,dtb_queuf[1])
	del(dtb_queu,dtb_queu[1])
	_dtb_clean()
	--sfx(2)
end

-- make sure that this function is called each update.
function dtb_update()
	if #dtb_queu>0 then
		if dtb_curline==0 then
			dtb_curline=1
		end
		local dislineslength=#dtb_dislines
		local curlines=dtb_queu[1]
		local curlinelength=#dtb_dislines[dislineslength]
		local complete=curlinelength>=#curlines[dtb_curline]
		if complete and dtb_curline>=#curlines then
			if btnp(4) then
				_dtb_nexttext()
				return
			end
		elseif dtb_curline>0 then
			dtb_ltime-=1
			if not complete then
				if dtb_ltime<=0 then
					local curchari=curlinelength+1
					local curchar=sub(curlines[dtb_curline],curchari,curchari)
					dtb_ltime=1
					if curchar~=" " then
						sfx(0)
					end
					if curchar=="." then
						dtb_ltime=6
					end
					dtb_dislines[dislineslength]=dtb_dislines[dislineslength]..curchar
				end
				if btnp(4) then
					dtb_dislines[dislineslength]=curlines[dtb_curline]
				end
      else
        if(btnp(4)) then
          _dtb_nextline()
        end
			end
		end
	end
end

-- make sure to call this function everytime you draw.
function dtb_draw()
	if #dtb_queu>0 then
		local dislineslength=#dtb_dislines
		local offset=0
		if dtb_curline<dislineslength then
			offset=dislineslength-dtb_curline
		end
		rectfill(cam_x+3,cam_y+125-dislineslength*8,cam_x+125,cam_y+125,0)
		if dtb_curline>0 and #dtb_dislines[#dtb_dislines]==#dtb_queu[1][dtb_curline] then
			print("\x8e",cam_x+118,cam_y+120,1)
		end
		for i=1,dislineslength do
			print(dtb_dislines[i],4+cam_x,cam_y+i*8+119-(dislineslength+offset)*8,7)
		end
	end
end

-- --{ example usage }--

-- -- initialize
-- dtb_init()

-- -- add text to the queu, this can be done at any point in time.
-- --dtb_disp("hello world! welcome to this amazing dialogue box!")

-- dtb_disp("a dialogue can be queud with: dtb_disp(text,callback)")

-- dtb_disp("the prompted dialogue will not interfere with previousily running dialogue boxes.")

-- dtb_disp("dtb_prompt also has a callback which is called when the piece of dialogue is finished.",function()
-- 	--whatever is in this function is called after this dialogue is done.
-- 	sfx(1)
-- end)

-- dtb_disp("just like that!")
-- dtb_disp("another cool feature is that a . will take longer.")
-- dtb_disp("which is great for some akward pauses... right?")
-- dtb_disp("other than the display function there're only 3 functions required to make this all work. an init, update and draw function. just call them and everything will be taken care of for you!")
-- dtb_disp("oh and by the way: we do have support for superduperlongwordsthatdonotactuallyfit so no worries!")
-- dtb_disp("anyways, feel free to use and/or modify this code!")

--fin du snippet



function _init()
  player={
    sp=1,--sprite du personnage
    x=9,--position x initiale
    y=9,--position y initiale
    w=8,--width la largeur en pixel du perso
    h=16,--height la hauteur en pixel du perso
    flp=false,--flip, faux si vers la droite et vrai si vers la gauche
    dx=0,--delta x, pour la vitesse de deplacement
    dy=0,--delta y, pour la vitesse de saut/chute
    max_dx=2,--vitesse max
    max_dy=3,--vitesse max
    acc=0.5,--acceleration, marche de pair avec delta x
    boost=4,--  marche de pair avec delta y 
    anim=0,--animation , pour regler le temps entre chaque frame
    running=false,
    jumping=false,
    falling=false,
    landed=false
  }
  menez={  
    sp=9,
    x=140, --position initiale
    y=96,
    flp=true -- vers la gauche
  }

-- variable globale
  chrono=0 --sert pour animé le press x to play
  game_state="menu"
  gravity=0.3
  friction=0.85
  interaction = false
  start_bulle = false


  --simple camera
  cam_x=0
  cam_y=0

  --map limits
  map_start=0
  map_end=1024
  
  intro_init()
  dtb_init()

end

-->8
--update and draw

function _update()
  
  if game_state == "plot" then
    if (keys:down(5))  then
      plot()
      game_state = "game"
    end
  end
 
  if game_state == "menu" then
    skydeg += 0.0005
    if keys:down(5) then
      game_state = "plot"
    end
  end
  
  if game_state == "game" then
    player_update()
    player_animate()
    dtb_update()
  end

  --simple camera
  cam_x=player.x-64+(player.w/2)
  if cam_x<map_start then
     cam_x=map_start
  end
  if cam_x>map_end-128 then
     cam_x=map_end-128
  end

  cam_y=player.y-64+(player.h/2)
  if cam_y<map_start then
     cam_y=map_start
  end
  if cam_y>map_end-128 then
     cam_y=map_end-128
  end

  camera(cam_x,cam_y)
  keys:update()
  
end




function _draw()
  cls()
  --menu
  if game_state == "menu" then
    intro()
  end

  if game_state == "plot" then
    plot()
  end

  if game_state == "game" then
    cls()
    map(0,0)
    spr(player.sp,player.x,player.y,1,2,player.flp)
    spr(menez.sp,menez.x,menez.y,1,2,menez.flp)
    dialog_menez()
  end


end


-->8
--collisions

function collide_map(obj,aim,flag)
 --obj = table needs x,y,w,h
 --aim = left,right,up,down

 local x=obj.x  local y=obj.y
 local w=obj.w  local h=obj.h

 local x1=0	 local y1=0
 local x2=0  local y2=0

 if aim=="left" then
   x1=x-1  y1=y
   x2=x    y2=y+h-1

 elseif aim=="right" then
   x1=x+w-1    y1=y
   x2=x+w  y2=y+h-1

 elseif aim=="up" then
   x1=x+2    y1=y-1
   x2=x+w-3  y2=y

 elseif aim=="down" then
   x1=x+2      y1=y+h
   x2=x+w-3    y2=y+h
 end

 --pixels to tiles
 x1/=8    y1/=8
 x2/=8    y2/=8
 
 if fget(mget(x1,y1), flag)
 or fget(mget(x1,y2), flag)
 or fget(mget(x2,y1), flag)
 or fget(mget(x2,y2), flag) then
   return true
 else
   return false
 end

end

function collide_npc(player,npc,distance)
  local d = distance
  local p = player
  local n = npc
  if(n.x - d < p.x and p.x < n.x + d) then -- test si le player est dans le champ du npc dans l'axe x
   if(n.y - d < p.y and p.y < n.y + d) then -- test si le player est dans le champ du npc dans l'axe y
    return true
   end
  end
  return false
end


-- -->8
-- --player

function player_update()
  --physics
  player.dy+=gravity
  player.dx*=friction

  --controls
  if btn(0) and game_state == "game" then
    player.dx-=player.acc
    player.running=true
    player.flp=true
  end
  if btn(1) and game_state == "game" then
    player.dx+=player.acc
    player.running=true
    player.flp=false
  end
  
  -- stop running 
  if player.running
  and not btn(0)
  and not btn(1)
  and not player.falling
  and not player.jumping then
    player.running=false
  end

  --jump
  if btnp(2) and game_state == "game"
  and player.landed then
    player.dy-=player.boost
    player.landed=false
  end

  --check collision up and down
  if player.dy>0 then
    player.falling=true
    player.landed=false
    player.jumping=false

    player.dy=limit_speed(player.dy,player.max_dy)

    if collide_map(player,"down",0) then
      player.landed=true
      player.falling=false
      player.dy=0
      player.y-=((player.y+player.h+1)%8)-1
    end
  elseif player.dy<0 then
    player.jumping=true
    if collide_map(player,"up",1) then
      player.dy=0
    end
  end

  --check collision left and right
  if player.dx<0 then

    player.dx=limit_speed(player.dx,player.max_dx)

    if collide_map(player,"left",1) then
      player.dx=0
    end

  elseif player.dx>0 then

    player.dx=limit_speed(player.dx,player.max_dx)

    if collide_map(player,"right",1) then
      player.dx=0
    end

  end

  if collide_npc(player,menez,16) and not start_bulle and #dtb_queu==0 then
    interaction = true
  else
    interaction = false
  end

  if keys:down(5) and interaction then
    interaction = false
    start_bulle = true
  end

  player.x+=player.dx
  player.y+=player.dy

  --limit player to map
  if player.x<map_start then
    player.x=map_start
  end
  if player.x>map_end-player.w then
    player.x=map_end-player.w
  end

end

function player_animate()
  if player.jumping then
    player.sp=5
  elseif player.falling then
    player.sp=6
  elseif player.running then
    if time()-player.anim>.1 then
      player.anim=time()
      player.sp+=1
      if player.sp>3 then
        player.sp=1
      end
    end
  else --player idle
    if time()-player.anim>.3 then
      player.anim=time()
      player.sp+=1
      if player.sp>1 then
        player.sp=0
      end
    end
  end
end

function limit_speed(num,maximum)
  return mid(-maximum,num,maximum)
end

--dessine la MAGNIFIQUE intro
function intro()
  titre="press ❎ to start!"
  chrono=(chrono+0.5)%10
  rectfill(0,0,127,127,1)
  for k,v in pairs(stars) do
		for i=0,0.01,0.001 do
 		pset(
 			v[1]*cos(skydeg+i)-
 			v[2]*sin(skydeg+i)+
 			63.5,
 			v[2]*cos(skydeg+i)+
 			v[1]*sin(skydeg+i)+
 			63.5,
 			7
 		)
 		end
  end
  sspr(0, 64, 64, 32, 27,37,96,48) -- draw the 32 x 64 image from (0, 64) at screen location (27, 37) but stretched to 96 x 48
	print("a game made by miagestik",20,102,9)
	if (chrono<5) then
		print(titre,28,121,8)
		print(titre,29,120,9)
	else
		print(titre,28,120,8)
		print(titre,29,119,10)
	end
end


function round(var)
  if var-flr(var)>=0.5 then
   return ceil(var)
  else
   return flr(var)
  end 
 end

 --dessine la croix interactive
function drawx(dx,dy)
  print("❎",dx,dy,6)
  rectfill(dx+1,dy,dx+4,dy+3,0)
  print("❎",dx,dy-round(time()%1.05),7)
 end


 --pour faire les traits qui tourne
function intro_init()
	spsize = 64*sqrt(2)*2
	stars = {}
	for i=1,64 do
		add(stars, {
			rnd(spsize)-spsize/2,
			rnd(spsize)-spsize/2
		})
	end
	skydeg = 0
end

--Affichage du plot
function plot()
  rectfill(0,0,127,127,1)
  print(" adolf hitler, the leader of\n germany nazi party,\n was one of the most powerful\n and notorious dictators of\n the 20th century.\n hitler capitalized on\n economic woes, popular\n discontent and political\n infighting to take absolute\n power in germany beginning\n in 1933. germany invasion of\n poland in 1939 led to the\n outbreak of World War ii,\n and by 1941 nazi forces had\n occupied much of Europe.\n ",8,16,7)
end

--Equivalent de la fonction sleep
function wait(a) 
  for i = 1,a do 
    flip() 
  end 
end

function dialog_menez()
  dtb_draw()
  if (interaction) then
    drawx(menez.x ,menez.y - 8)
  end
  if start_bulle then
    dtb_disp("menez:bonjour")
    dtb_disp("buffa:hello peasant")
    start_bulle = false
  end
end




__gfx__
00000000000000000000000000000000000000000000000000ff0000000000000000000006666660000000000000000000000000000000000000000000000000
0077777000777770007777700077777000777770077777ff0788770007777700077777ff6ffffff6000000000000000000000000000000000000000000000000
00777ff000777ff000777ff000777ff000777ff00777ff880788ff000777ff000777ff886f1ff1f6000000000000000000000000000000000000000000000000
0077f1f00077f1f00077f1f00077f1f00077f1f0077f188807881f00077f1f00077f1888ffffffff000000000000000000000000000000000000000000000000
007ffff0007ffff0007ffff0007ffff0007ffff007ff88800788ff0007ffff0007ff88800ff11ff0000000000000000000000000000000000000000000000000
00088000000ff000000ff000000ff000000ff00000f888000088000000ff00ff00f8880000ffff00000000000000000000000000000000000000000000000000
00888800000880000008800000088000000880000088800008888000088880890888800000055000000000000000000000000000000000000000000000000000
00888800008888000088880000888800008888000888800008888000088888880888800055555555000000000000000000000000000000000000000000000000
00888800008888000088880000888800008888000888800008888000088880000888800055555555000000000000000000000000000000000000000000000000
008ff8000088880008888880088888800888888088888000088880000888800088888000f555555f000000000000000000000000000000000000000000000000
00888800008ff8000ff888f00f888ff00ff888f0f88881110888800008888000f8888111f449944f000000000000000000000000000000000000000000000000
008888000088880000888800008888000088880008888111088880000888811008888111f110011f000000000000000000000000000000000000000000000000
00111100001111000110110000110110011011000110001101111000011001100011001101100110000000000000000000000000000000000000000000000000
0011110000111100011011000011011001101100011000110111100001100110011100110ff00ff0000000000000000000000000000000000000000000000000
001111000011110001101100001101100110110001100044011110000110044001100044f4f0f4f0000000000000000000000000000000000000000000000000
00444400004444000440440000440440044044000440000004444000044000000440000044404440000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333333334444444466666666cccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333333334444444466666666ccc77ccccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333444334444444466666666cc7777cccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
434444344444444466666666c777777ccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44444444444444446666666677777777cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44444444444444446666666677777777cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
444444444444444466666666cccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
444444444444444466666666cccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000cccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000cccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000cccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000046444644cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000c6ccc6cc656665660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000046444644565656560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000c6ccc6cc666566650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000055555555555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077777777777777700000000007777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077777777777777700000000777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077777777777777700000077777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077777777777777700000777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000007777770099999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000077777000099999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000077770000099999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000777700000011111119999000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077777000000000007777700000011ccccc1999900000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000777777770000000077770000001cc77777c199900000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077777777700000007777000001ccc7777cc719990000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000777777000007777000001cccc77c7cc7c1990000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000777770000777700001c77ccccccc7cc1999000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000077777000777700001c77cc7cccc7c71999000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000007777000777700001c7ccc77ccccc7c199000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000007777700777700001c7cc77cccccc7c199000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000007777700777700001c7ccc7cccccc71999000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000007777700777700001c7ccc777ccccc1999000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000077777007777000001c7cccc77cccc1999000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000777770077777000001c77ccc7ccc19990000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000007777700777770000001c77ccccc199990000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000077777000777770000001cccccc1999900000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000777770000777700000001111119999000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000007777700000777770000000000009990000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000077777700000077777000000000009900770000000000000000000000000000000000000000000000000000000000000000000000000000000
00007700000000777777000000007777770000000000077777000000000000000000000000000000000000000000000000000000000000000000000000000000
00077777000077777770000000000777777770000077777777000000000000000000000000000000000000000000000000000000000000000000000000000000
00077777777777777700000000000077777777777777777770000000000000000000000000000000000000000000000000000000000000000000000000000000
00007777777777777000000000000000777777777777777000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000077777777700000000000000000007777777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000404000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000003030100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
4444444444444444444444444444444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4443434444444444444444444444444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4444444443434344444444444444444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4444444444444444444444444444444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4444444444444443434343444444444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4444444444444444444444444444444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4444444444444444444444444444444444444444444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4444444444444444444444444444444444444444444400440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4444444444444444444444444444444444444444444400004400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4444444444444444424242424444444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4444444444444444444444444444444444444444444500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4444444242424444444444444444444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4444444444444444444444444444444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5454545454545454545453535353535353535353444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040004500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414141414141000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000414141414141414141414141000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
